[package]
name = "rust-experiments"
version = "0.1.0"
authors = ["Noel Kwan <noelkwan1998@gmail.com"]
edition = "2018"

############## Experiment on futures

[[bin]]
 name = "await"
 path = "await.rs"

# FIXME
# [[bin]]
#  name = "async-for-loop"
#  path = "async-for-loop.rs"

# FIXME
# [[bin]]
#  name = "futures-unordered"
#  path = "futures-unordered.rs"

[[bin]]
 name = "join-all"
 path = "join-all.rs"

############## Experiment on Ownership + Lifetimes

[[bin]]
name = "rc"
path = "rc.rs"

[[bin]]
name = "box"
path = "box.rs"

[[bin]]
name = "refcell"
path = "refcell.rs"

[[bin]]
name = "deadlock"
path = "deadlock.rs"

[[bin]]
name = "tokio-rwlock-race"
path = "tokio-rwlock-race.rs"

[[bin]]
name = "json"
path = "json.rs"

[[bin]]
name = "smallvec-size"
path = "smallvec-size.rs"

[[bin]]
name = "async-stream"
path = "async-stream.rs"

[[bin]]
name = "async-stream-min"
path = "async-stream-min.rs"

[[bin]]
name = "ban-trait"
path = "ban-trait.rs"

[[bin]]
name = "ban-trait2"
path = "ban-trait2.rs"

[[bin]]
name = "mut-and-arc-ref"
path = "mut-and-arc-ref.rs"

[[bin]]
name = "warn-option"
path = "warn-option.rs"

[dependencies]
anyhow = "1.0"
futures = "0.3.18"
tokio = {version = "1.14.0", features = ["full"]}
serde = { version = "1.0", default-features = false, features = ["derive", "alloc"] }
serde_json = { version = "1.0", default-features = false, features = ["alloc"] }
smallvec = { version = "1.10.0", features = ["union", "specialization", "write", "const_new"] }
tinyvec = { version = "1.6.0", features = ["alloc"] }
paste = "1.0.12"
dhat = "0.3.2"
futures-async-stream = "0.2"

[dev-dependencies]
criterion = { version = "0.4.0" }

[[bench]]
name = "zip-overhead"
harness = false

[[bench]]
name = "fibonacci"
harness = false

[[bench]]
name = "smallvec-vs-vec"
harness = false

[[bench]]
name = "vec-eq-simd"
harness = false

[[bench]]
name = "match-dyn"
harness = false

[profile.release]
debug = 1

[features]
dhat-heap = []    # if you are doing heap profiling
dhat-ad-hoc = []  # if you are doing ad hoc profiling
